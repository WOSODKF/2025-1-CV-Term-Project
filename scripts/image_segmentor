#!/bin/python3
import os
import sys

script_dir = os.path.dirname(os.path.realpath(__file__))
sys.path.append(script_dir)

import numpy as np
import rospy
from cv_project.msg import setpoint, robotState, robotMeasurement
from utils.math_utils import *
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
from ultralytics import YOLO
import cv2
import torch

# Image segementation node - by YOLOv8

class ViewSubscriber:
    def __init__(self, agent_ID):
        self.agent_ID = agent_ID
        pass
    
    def callback():
        pass
    
class MaskPublisher:
    def __init__(self, agent_ID):
        self.agent_ID = agent_ID
        pass
    

class ImageSegmentor:
    def __init__(self):
        self.model = YOLO("yolov8n-seg.pt")
        self.bridge = CvBridge()
        
    def init_ros_io(self, agent_num):
        self.agent_num = agent_num
        self.img_sub = []
        self.mask_pub = []
        
        for i in range(agent_num):
            self.img_sub.append(ViewSubscriber(i))
            self.mask_pub.append(MaskPublisher(i))
    
    def run(self):
        rospy.init_node("segmentor")
        agent_num = rospy.get_param("~agent_num")
        self.init_ros_io(agent_num)
        
        while not rospy.is_shutdown():
            # event-based operation
            pass

if __name__ == '__main__':
    segmentor = ImageSegmentor()
    segmentor.run()